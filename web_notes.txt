I combed the internet for good tips for solving web CTF challenges. 

directory traversal (encoded)

url tampering

url encoding

xxd for hex encoding

check for LFI/RFI

use UNICODE to bypass filtering

sqli

check strength of key: how big is search space? 

wireshark:
"follow tcp stream" to understand web interaction

mallory: transparent proxy
github.com/intrepediusgroup/mallory

decode session key: decoding tab in burpsuite

Good burpsuite tabs: repeater, intruder

also test POST verb, instead of just GET
try to modify POST parameters

check for crossdomain.xml

Flare: flash decompiler, nowarp.de

SWFInvestigator

JAD, Procyon: java decompiler
bitbuck.org/mstrobel/procyon/wiki/Java%20Decompiler

Soapui: test SOAP app

wsfuzzer: owasp project for testing SOAP

use XML entity to ref external data (similar idea to LFI/RFI)

XML, SGML: use CDATA

<![CDATA[<img src="broken" onerror="alert('XSS')">]]>

<![CDATA[><img src="broken" onerror="alert('XSS')">]]>

vbscript:
<script type="text/vbscript>
if name="foo" then
document.write("foo")
end if
</script>

<img src='pic.gif' onload='vbs:MsgBox "foo"'>

check for XPATH injection
special char: /, *, @

websocket: ws://, wss://
rfc6455
cross site websocket hijacking (CSWH)
does not use same origin policy (SOP)

HTTP/2: rfc7540
tools: mitmproxy, nghttp, python hyper, http2fuzz

combine jscript, vbscript:

<script type="text/vbscript">
code = "alert(1)"
execScript code
</script>

ModSecurity bypass:
%23%2f%2a%0a



